version: '3.8'

services:
  web:
    build:
      context: .
      dockerfile: docker/web/Dockerfile
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/app
    ports:
      - "8081:8000"
    env_file:
      - .env
    depends_on:
      - db

  db:
    image: postgres:15-bullseye
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data/  # This volume will persist data

  nginx:
    image: nginx:alpine
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d:/etc/nginx/conf.d
      - certbot-etc:/etc/letsencrypt
      - ./nginx/certbot:/var/www/certbot
      - .:/app
    depends_on:
      - web
      - certbot
    networks:
      - docker_certbot
  
  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - certbot-etc:/etc/letsencrypt
      - ./nginx/certbot:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    networks:
      - docker_certbot

volumes:
  postgres_data:
  certbot-etc:
    driver: local
  certbot-var:

networks:
  docker_certbot:
    driver: bridge